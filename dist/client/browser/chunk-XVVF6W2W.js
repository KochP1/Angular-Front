import{F as g,I as l,g as i,h as p,o as d}from"./chunk-RHEHRKPS.js";import{M as h,Q as s,k as n,u as a}from"./chunk-UFSGMEGV.js";var m=class c{constructor(o,e,r){this.http=o;this.router=e;this.authService=r}apiUrl=`${g.apiBaseUrl}/admin`;createProject(o){let e=this.authService.getToken();if(!e)return this.router.navigate(["/"]),n(()=>new Error("No autenticado"));let r=new i({Authorization:`Bearer ${e}`});return this.http.post(`${this.apiUrl}/create_project`,o,{headers:r}).pipe(a(t=>(console.error("Error creating project:",t),n(()=>t))))}deleteProject(o){let e=this.authService.getToken();if(!e)return this.router.navigate(["/"]),n(()=>new Error("No autenticado"));let r=new i({Authorization:`Bearer ${e}`});return this.http.delete(`${this.apiUrl}/delete_project/${o}`,{headers:r}).pipe(a(t=>(console.error("Error creating project:",t),n(()=>t))))}getProjects(){let o=this.authService.getToken(),e=this.authService.getUser();if(!o||!e)return this.router.navigate(["/"]),n(()=>new Error("No autenticado"));try{let r=JSON.parse(e),t=new i({Authorization:`Bearer ${o}`});return this.http.get(`${this.apiUrl}/get_project/${r.id}`,{headers:t}).pipe(a(u=>(console.error("Error fetching projects:",u),n(()=>u))))}catch(r){return console.error("Error parsing user data:",r),n(()=>new Error("Datos de usuario corruptos"))}}getProject(o){let e=this.authService.getToken();if(!e)return this.router.navigate(["/"]),n(()=>new Error("No autenticado"));try{let r=new i({Authorization:`Bearer ${e}`});return this.http.get(`${this.apiUrl}/get_one_project/${o}`,{headers:r}).pipe(a(t=>(console.error("Error fetching projects:",t),n(()=>t))))}catch(r){return console.error("Error parsing user data:",r),n(()=>new Error("Datos de usuario corruptos"))}}updateProject(o,e){let r=this.authService.getToken(),t=new i({Authorization:`Bearer ${r}`});return this.http.put(`${this.apiUrl}/edit_project/${o}`,e,{headers:t})}getTasksByProject(o){let e=this.authService.getToken();if(!e)return this.router.navigate(["/"]),n(()=>new Error("No autenticado"));let r=new i({Authorization:`Bearer ${e}`});return this.http.get(`${this.apiUrl}/get_task/${o}`,{headers:r}).pipe(a(t=>(console.error("Error fetching tasks:",t),n(()=>t))))}deleteTask(o){let e=this.authService.getToken();if(!e)return this.router.navigate(["/"]),n(()=>new Error("No autenticado"));let r=new i({Authorization:`Bearer ${e}`});return this.http.delete(`${this.apiUrl}/delete_task/${o}`,{headers:r}).pipe(a(t=>(console.error("Error deleting the task:",t),n(()=>t))))}createTask(o){let e=this.authService.getToken();if(!e)return this.router.navigate(["/"]),n(()=>new Error("No autenticado"));let r=new i({Authorization:`Bearer ${e}`});return this.http.post(`${this.apiUrl}/create_task`,o,{headers:r}).pipe(a(t=>(console.error("Error creating task:",t),n(()=>t))))}getTask(o){let e=this.authService.getToken();if(!e)return this.router.navigate(["/"]),n(()=>new Error("No autenticado"));try{let r=new i({Authorization:`Bearer ${e}`});return this.http.get(`${this.apiUrl}/get_task_id/${o}`,{headers:r}).pipe(a(t=>(console.error("Error fetching tasks:",t),n(()=>t))))}catch(r){return console.error("Error parsing user data:",r),n(()=>new Error("Datos de usuario corruptos"))}}updateTask(o,e){let r=this.authService.getToken(),t=new i({Authorization:`Bearer ${r}`});return this.http.put(`${this.apiUrl}/edit_task/${o}`,e,{headers:t})}static \u0275fac=function(e){return new(e||c)(s(p),s(d),s(l))};static \u0275prov=h({token:c,factory:c.\u0275fac,providedIn:"root"})};export{m as a};
